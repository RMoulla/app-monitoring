name: CI/CD Pipeline for Flask Churn Prediction

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE: flask-churn-app
  DOCKER_CONTAINER: flask-churn-app
  FLASK_PORT: 8000
  PROMETHEUS_PORT: 9090

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE }}:latest .

      - name: Run Docker container
        run: |
          docker run -d -p ${{ env.FLASK_PORT }}:${{ env.FLASK_PORT }} --name ${{ env.DOCKER_CONTAINER }} ${{ env.DOCKER_IMAGE }}:latest

      - name: Check Docker logs
        run: |
          sleep 5  # Attendre un peu que le conteneur dÃ©marre
          docker logs ${{ env.DOCKER_CONTAINER }}

      - name: Wait for Flask to be ready
        run: |
          timeout 60s bash -c 'until curl -s http://localhost:${{ env.FLASK_PORT }}/metrics > /dev/null; do sleep 1; done'

      - name: Test Flask API
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"Age": 42, "Total_Purchase": 11066.80, "Account_Manager": 0, "Years": 7.22, "Num_Sites": 8}' \
          http://localhost:${{ env.FLASK_PORT }}/predict

      - name: Check Prometheus metrics
        run: |
          curl http://localhost:${{ env.FLASK_PORT }}/metrics

      - name: Start Prometheus
        run: |
          docker run -d --name prometheus \
          -p ${{ env.PROMETHEUS_PORT }}:${{ env.PROMETHEUS_PORT }} \
          -v ${{ github.workspace }}/prometheus.yml:/etc/prometheus/prometheus.yml \
          prom/prometheus

      - name: Verify Prometheus is scraping metrics
        run: |
          sleep 30  # Wait for Prometheus to scrape metrics
          curl "http://localhost:${{ env.PROMETHEUS_PORT }}/api/v1/query?query=flask_http_request_total"

      - name: Clean up Docker containers
        run: |
          docker stop ${{ env.DOCKER_CONTAINER }} prometheus
          docker rm ${{ env.DOCKER_CONTAINER }} prometheus